
# PROCESS 1 - COMMAND CONSOLE


## THE AIM OF COMMAND CONSOLE :

  In this project the command console is used to 
  receive the commands from user in input and 
  therefore to manage the motors behavior. 
  For instance the user can choose to increase 
  the motor x speed by typing the number 1 from the 
  keyboard.  
	
## HOW IT WORKS :
	
  This process uses a combination of SIGNALS and 
  NAMED PIPE for implementing the communication 
  with other processes (Motor x and z) whereas it
  uses only SIGNAL to communicate with the watchdog 
  process.
	
   ### COMMUNICATION WITH MOTORS :
      
      To send the commands received by the user to 
      the two motor processes, the command console sends 
      a signal to the proper motor to warn it that 
      there is a command that must be read.
      To do this the command console needs the pid of 
      the motor processes (because the system call KILL,
      that send the signal, needs the process receiving
      pid as first argument) so firstly is created 
      a temporary text file, that contains all the pid of 
      processes, and lastly an array that takes all pid 
      in order to the command console can choose the 
      proper pid that it needs.
      After sending the signal the command console open
      a named pipe and write the command taken in input
      using the write() system call.
	
   ### COMMUNICATION WITH WATCHDOG :
      
      When the command console receive a command in input
      sends a signal to the watchdog in order to warn it 
      that it is still active.
      Instead, when the command console and the other 
      processes are not active for 60 seconds, the command
      console catches the alarm signal sent by watchdog and 
      through the signal_handler function it handles the 
      alarm signal.

